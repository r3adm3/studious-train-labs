#!markdown

# Numbers and Integer Math

#!markdown

## Integer Math

You have a few `integers` defined below. An `integer` is a positive or negative whole number.
> Before you run the code, what should `c` be?

#!markdown

24,12,108,3

#!markdown

# Addition

#!pwsh

$a = 18
$b = 6
$c = $a + $b
$c

#!markdown

# Subtraction

#!pwsh

$c = $a - $b
$c

#!markdown

# Multiplication

#!pwsh

$c = $a * $b
$c

#!markdown

# Division

#!pwsh

$c = $a / $b
$c

#!markdown

# Order of Operations

PowerShell follows the order of operation when it comes to math. That is, it does multiplication and division first, then addition and subtraction.

> What would the math be if PowerShell didn't follow the order of operation, and instead just did math left to right?

#!pwsh

$a = 5
$b = 4
$c = 2
$d = $a + $b * $c

$d

#!markdown

## Using parenthesis

You can also force different orders by putting parentheses around whatever you want done first
> Try it out

#!pwsh

$d = ($a + $b) * $c
$d

#!markdown

You can make math as long and complicated as you want.
> Can you make this line even more complicated?

#!pwsh

$d = ($a + $b) - 6 * $c + (12 * 4) / 3 + 12
$d

#!markdown

## Integers: Whole numbers no matter what

Integer math will always produce integers. What that means is that even when math should result in a decimal or fraction, the answer will be truncated to a whole number.
> Check it out. What should the answer truly be?

#!markdown

3 2/3

#!pwsh

$a = 7
$b = 4
$c = 3
$d = ($a + $b) / $c
$d

#!markdown

# Playground

Play around with what you've learned! Here's some starting ideas:
> Do you have any homework or projects that need math? Try using code in place of a calculator!
>
> How do integers round? Do they always round up? down? to the nearest integer?
>
> How do the Order of Operations work? Play around with parentheses.

#!pwsh

"Playground"

#!markdown

# Other resources

Here's some more places to explore:
> [Microsoft Learn](https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-7.2)
>
> [PowerShell Documentation](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/?view=powershell-7)
